// Define weightage coefficients
def w1 = 0.139650873;  // Deprecated Browser Versions (RDB)
def w2 = 0.19201995;   // Malicious Extensions (RME)
def w3 = 0.039900249;  // Unsecure Protocol (RUP)
def w4 = 0.089775561;  // Malicious File Download (RMF)
def w5 = 0.089775561;  // Weak Password Management (RPM)
def w6 = 0.144638404;  // 3rd party Cookies (RTC)
def w7 = 0.064837905;  // Cache management (RCC)
def w8 = 0.064837905;  // Pop-ups/Ads (RPA)
def w9 = 0.099750623;  // Disabled safe browsing (RSB)
def w10 = 0.074812968; // Camera/Microphone/Location (RCL)

def overallRisk = 0;

// RDB calculation
String[] targetVersions = new String[] {
    "125.0.6422.112".trim(),
    "125.0.6422.60".trim(),
    "124.0.6367.207".trim(),
    "124.0.6367.201".trim(),
    "120.0.6099.224".trim(),
    "120.0.6099.129".trim(),
    "119.0.6045.199".trim(),
    "116.0.5845.187".trim(),
    "116.0.5845.179".trim(),
    "114.0.5735.110".trim(),
    "112.0.5615.137".trim(),
    "112.0.5615.121".trim(),
    "108.0.5359.94".trim(),
    "107.0.5304.121".trim(),
    "107.0.5304.87".trim(),
    "105.0.5195.102".trim(),
    "105.0.5195.52".trim(),
    "104.0.5112.101".trim(),
    "103.0.5060.114".trim(),
    "100.0.4896.127".trim(),
    "99.0.4844.84".trim(),
    "98.0.4758.102".trim(),
    "95.0.4638.69".trim(),
    "94.0.4606.71".trim(),
    "94.0.4606.61".trim(),
    "93.0.4577.82".trim(),
    "91.0.4472.164".trim(),
    "91.0.4472.101".trim(),
    "91.0.4472.77".trim(),
    "90.0.4430.85".trim(),
    "89.0.4389.128".trim(),
    "89.0.4389.90".trim(),
    "89.0.4389.72".trim(),
    "88.0.4324.150".trim(),
    "96.0.4664.110".trim(),
    "86.0.4240.198".trim(),
    "86.0.4240.185".trim(),
    "86.0.4240.183".trim(),
    "86.0.4240.111".trim(),
    "81.0.4044.92".trim(),
    "80.0.3987.122".trim(),
    "78.0.3904.87".trim(),
    "73.0.3683.86".trim(),
    "72.0.3626.121".trim(),
    "71.0.3578.80".trim(),
    "70.0.3538.64".trim(),
    "65.0.3325.146".trim(),
    "59.0.3071.92".trim(),
    "57.0.2987.108".trim(),
    "54.0.2840.87".trim(),
    "49.0.2623.108".trim(),
    "10.2.154.27".trim()
};
double[] scores = new double[] {
    0.0264,
    0.02112,
    0.01936,
    0.0096,
    0.01848,
    0.0616,
    0.7056,
    5.60032,
    6.29288,
    0.92048,
    0.07008,
    0.23144,
    0.03608,
    0.15552,
    0.15664,
    0.09888,
    2.41472,
    0.2431,
    0.11616,
    0.1804,
    0.1232,
    0.36432,
    0.17776,
    0.09211,
    1.05885,
    1.26456,
    0.14016,
    0.06912,
    5.17704,
    0.03256,
    0.16016,
    3.1284,
    0.1131,
    6.4328,
    8.38464,
    0.4004,
    0.10032,
    0.3344,
    0.10208,
    0.25784,
    0.02208,
    0.02816,
    7.89624,
    0.1898,
    0.04743,
    8.54128,
    8.5712,
    4.5617,
    6.31995,
    7.63312,
    8.53424,
    8.5008,
    7.7088,
    7.04792,
    4.05504,
    2.68863,
    9.02379
};
def totalScore = 0.0;
def matchCount = 0;
if (doc.containsKey('msg_json.ChromeVersion') && doc['msg_json.ChromeVersion'].size() > 0) {
    def chromeVersion = doc['msg_json.ChromeVersion'].value;
    def versionParts = chromeVersion.splitOnToken('.');
    if (versionParts.length >= 4) {
        def versionMajor = Integer.parseInt(versionParts[0]);
        def versionMinor = Integer.parseInt(versionParts[1]);
        def versionBuild1 = Integer.parseInt(versionParts[2]);
        def versionBuild2 = Integer.parseInt(versionParts[3]);
        for (int i = 0; i < targetVersions.length; i++) {
            def targetVersion = targetVersions[i];
            def score = scores[i];
            def targetParts = targetVersion.splitOnToken('.');
            def targetMajor = Integer.parseInt(targetParts[0]);
            def targetMinor = Integer.parseInt(targetParts[1]);
            def targetBuild1 = Integer.parseInt(targetParts[2]);
            def targetBuild2 = Integer.parseInt(targetParts[3]);
            if (versionMajor < targetMajor ||
                (versionMajor == targetMajor && versionMinor < targetMinor) ||
                (versionMajor == targetMajor && versionMinor == targetMinor && 
                 (versionBuild1 < targetBuild1 || (versionBuild1 == targetBuild1 && versionBuild2 < targetBuild2)))) {
                totalScore += score;
                matchCount++;
            }
        }
    }
}
def rdb = matchCount > 0 ? (totalScore / (matchCount * 10)) * 100 : 0.0;
overallRisk += w1 * rdb;

// RCC calculation
def rcc = 0;
if (doc.containsKey('msg_json.Cache') && doc['msg_json.Cache'].size() > 0) {
    def cacheValue = doc['msg_json.Cache'].value;
    if (cacheValue != null) {
        def daysSinceLastCleared = Double.parseDouble(cacheValue.toString());
        rcc = Math.min(daysSinceLastCleared * 10, 100);
    }
}
overallRisk += w7 * rcc;

// RCL calculation
def rcl = 0;
if (doc.containsKey('msg_json.HardwareAccess') && doc['msg_json.HardwareAccess'].size() > 0) {
    def hardwareAccess = doc['msg_json.HardwareAccess'].value;
    if (hardwareAccess != null) {
        def accessValue = (hardwareAccess instanceof Number) ? 
                          hardwareAccess : Integer.parseInt(hardwareAccess.toString());
        if ((accessValue & 1) != 0) rcl += 33;
        if ((accessValue & 2) != 0) rcl += 33;
        if ((accessValue & 4) != 0) rcl += 34;
    }
}
overallRisk += w10 * rcl;

// RME calculation
def maliciousExtensions = [
    "acmnokigkgihogfbeooklgemindnbine",
"apgohnlmnmkblgfplgnlmkjcpocgfomp",
"apjnadhmhgdobcdanndaphcpmnjbnfng",
"bahkljhhdeciiaodlkppoonappfnheoi",
"bannaglhmenocdjcmlkhkcciioaepfpj",
"bgffinjklipdhacmidehoncomokcmjmh",
"bifdhahddjbdbjmiekcnmeiffabcfjgh",
"bjpknhldlbknoidifkjnnkpginjgkgnm",
"blngdeeenccpfjbkolalandfmiinhkak",
"ccdfhjebekpopcelcfkpgagbehppkadi",
"cceejgojinihpakmciijfdgafhpchigo",
"cebjhmljaodmgmcaecenghhikkjdfabo",
"chbpnonhcgdbcpicacolalkgjlcjkbbd",
"cifafogcmckphmnbeipgkpfbjphmajbc",
"clopbiaijcfolfmjebjinippgmdkkppj",
"cpgoblgcfemdmaolmfhpoifikehgbjbf",
"dcmjopnlojhkngkmagminjbiahokmfig",
"deiiiklocnibjflinkfmefpofgcfhdga",
"dipecofobdcjnpffbkmfkdbfmjfjfgmn",
"dopkmmcoegcjggfanajnindneifffpck",
"dopmojabcdlfbnppmjeaajclohofnbol",
"edcepmkpdojmciieeijebkodahjfliif",
"ekbecnhekcpbfgdchfjcfmnocdfpcanj",
"elflophcopcglipligoibfejllmndhmp",
"eogfeijdemimhpfhlpjoifeckijeejkc",
"fcobokliblbalmjmahdebcdalglnieii",
"fgafnjobnempajahhgebbbpkpegcdlbf",
"fgcomdacecoimaejookmlcfogngmfmli",
"fgmeppijnhhafacemgoocgelcflipnfd",
"fhanjgcjamaagccdkanegeefdpdkeban",
"flfkimeelfnpapcgmobfgfifhackkend",
"fmahbaepkpdimfcjpopjklankbbhdobk",
"foebfmkeamadbhjcdglihfijdaohomlm",
"fpngnlpmkfkhodklbljnncdcmkiopide",
"gdifegeihkihjbkkgdijkcpkjekoicbl",
"gfcmbgjehfhemioddkpcipehdfnjmief",
"gfdefkjpjdbiiclhimebabkmclmiiegk",
"ggijmaajgdkdijomfipnpdfijcnodpip",
"ghgjhnkjohlnmngbniijbkidigifekaa",
"gllihgnfnbpdmnppfjdlkciijkddfohn",
"gmmohhcojdhgbjjahhpkfhbapgcfgfne",
"gofhadkfcffpjdbonbladicjdbkpickk",
"hapicipmkalhnklammmfdblkngahelln",
"hijipblimhboccjcnnjnjelcdmceeafa",
"hmamdkecijcegebmhndhcihjjkndbjgk",
"hodfejbmfdhcgolcglcojkpfdjjdepji",
"hpfijbjnmddglpmogpaeofdbehkpball",
"ianfonfnhjeidghdegbkbbjgliiciiic",
"ibfjiddieiljjjccjemgnoopkpmpniej",
"inhdgbalcopmbpjfincjponejamhaeop",
"iondldgmpaoekbgabgconiajpbkebkin",
"ipagcbjbgailmjeaojmpiddflpbgjngl",
"jagbooldjnemiedoagckjomjegkopfno",
"jdheollkkpfglhohnpgkonecdealeebn",
"jfefcmidfkpncdkjkkghhmjkafanhiam",
"jfgkpeobcmjlocjpfgocelimhppdmigj",
"jghiljaagglmcdeopnjkfhcikjnddhhc",
"jgjakaebbliafihodjhpkpankimhckdf",
"jiiinmeiedloeiabcgkdcbbpfelmbaff",
"jkdngiblfdmfjhiahibnnhcjncehcgab",
"jkofpdjclecgjcfomkaajhhmmhnninia",
"kbdbmddhlgckaggdapibpihadohhelao",
"keceijnpfmmlnebgnkhojinbkopolaom",
"khhemdcdllgomlbleegjdpbeflgbomcj",
"kjdcopljcgiekkmjhinmcpioncofoclg",
"kjgaljeofmfgjfipajjeeflbknekghma",
"labpefoeghdmpbfijhnnejdmnjccgplc",
"lameokaalbmnhgapanlloeichlbjloak",
"lbeekfefglldjjenkaekhnogoplpmfin",
"lbhddhdfbcdcfbbbmimncbakkjobaedh",
"ldoiiiffclpggehajofeffljablcodif",
"lhjdepbplpkgmghgiphdjpnagpmhijbg",
"ljddilebjpmmomoppeemckhpilhmoaok",
"ljnfpiodfojmjfbiechgkbkhikfbknjc",
"lnedcnepmplnjmfdiclhbfhneconamoj",
"lnlkgfpceclfhomgocnnenmadlhanghf",
"loigeafmbglngofpkkddgobapkkcaena",
"lpajppfbbiafpmbeompbinpigbemekcg",
"majekhlfhmeeplofdolkddbecmgjgplm",
"mapafdeimlgplbahigmhneiibemhgcnc",
"mcfeaailfhmpdphgnheboncfiikfkenn",
"mgkjakldpclhkfadefnoncnjkiaffpkp",
"mhinpnedhapjlbgnhcifjdkklbeefbpa",
"mihiainclhehjnklijgpokdpldjmjdap",
"mmkakbkmcnchdopphcbphjioggaanmim",
"mopkkgobjofbkkgemcidkndbglkcfhjj",
"mpifmhgignilkmeckejgamolchmgfdom",
"nabmpeienmkmicpjckkgihobgleppbkc",
"nahhmpbckpgdidfnmfkfgiflpjijilce",
"ncepfbpjhkahgdemgmjmcgbgnfdinnhk",
"npaklgbiblcbpokaiddpmmbknncnbljb",
"npdfkclmbnoklkdebjfodpendkepbjek",
"nplenkhhmalidgamfdejkblbaihndkcm",
"oalfdomffplbcimjikgaklfamodahpmi",
"odnakbaioopckimfnkllgijmkikhfhhf",
"oklejhdbgggnfaggiidiaokelehcfjdp",
"omgeapkgiddakeoklcapboapbamdgmhp",
"oonbcpdabjcggcklopgbdagbfnkhbgbe",
"opahibnipmkjincplepgjiiinbfmppmh",
"pamchlfnkebmjbfbknoclehcpfclbhpl",
"pcfapghfanllmbdfiipeiihpkojekckk",
"pchfjdkempbhcjdifpfphmgdmnmadgce",
"pdpcpceofkopegffcdnffeenbfdldock",
"pgahbiaijngfmbbijfgmchcnkipajgha",
"pidohlmjfgjbafgfleommlolmbjdcpal",
"pilplloabdedfmialnfchjomjmpjcoej",
"pklmnoldkkoholegljdkibjjhmegpjep",
"pknkncdfjlncijifekldbjmeaiakdbof",
"plmgefkiicjfchonlmnbabfebpnpckkk",
"pnciakodcdnehobpfcjcnnlcpmjlpkac",
"ponodoigcmkglddlljanchegmkgkhmgb",
"oanbpfkcehelcjjipodkaafialmfejmi",
"lhfibgclamcffnddoicjmoopmgomknmb",
"ilcbbngkolbclhlildojhgjdbkkehfia",
"pnhjnmacgahapmnnifmneapinilajfol",
"ocifcogajbgikalbpphmoedjlcfjkhgh",
"peglehonblabfemopkgmfcpofbchegcl",
"aaeohfpkhojgdhocdfpkdaffbehjbmmd",
"lidnmohoigekohfmdpopgcpigjkpemll",
"jmbmildjdmppofnohldicmnkojfhggmb",
"jdoaaldnifinadckcbfkbiekgaebkeif",
"ogjfhmgoalinegalajpmjoliipdibhdm",
"lebmkjafnodbnhbahbgdollaaabcmpbh",
"gjammdgdlgmoidmdfoefkeklnhmllpjp",
"kdkpllchojjkbgephbbeacaahecgfpga",
"jaehldonmiabhfohkenmlimnceapgpnp",
"pmhlkgkblgeeigiegkmacefjoflennbn",
"ofdfbeanbffehepagohhengmjnhlkich",
"mjchijabihjkhmmaaihpgmhkklgakinl",
"poppendnaoonepbkmjejdfebihohaalo",
"eogoljjmndnjfikmcbmopmlhjnhbmdda",
"gdnkjjhpffldmfljpbfemliidkeeecdj",
"gelcjfdfebnabkielednfoogpbhdeoai",
"ofpihhkeakgnnbkmcoifjkkhnllddbld",
"pjjghngpidphgicpgdebpmdgdicepege",
"nchdkdaknojhpimbfbejfcdnmjfbllhj",
"blcfpeooekoekehdpbikibeblpjlehlh",
"looclnmoilplejheganiloofamfilbcd",
"oehimkphpeeeneindfeekidpmkpffkgc",
"eebbihndkbkejmlgfoofigacgicamfha",
"faopefnnleiebimhkldlplkgkjpbmcea",
"obcfkcpejehknjdollnafpebkcpkklbl",
"jepocknhdcgdmbiodbpopcbjnlgecdhf",
"dehhfjanlmglmabomenmpjnnopigplae",
"ekijhekekfckmkmbemiijdkihdibnbgh",
"pjpjefgijnjlhgegceegmpecklonpdjp",
"nlhocomjnfjedielocojomgfldbjmdjj",
"opooaebceonakifaacigffdhogdgfadg",
"ojofdaokgfdlbeomlelkiiipkocneien",
"gpaaalbnkccgmmbkendiciheljgpdhob",
"almfnpjmjpnknlgpipillhfmchjikkno",
"eeacchjlmkcleifpppcjbmahcnlihamj",
"lojgkcienjoiogbfkbjiidpfnabhkckf",
"gkemhapalomnipjhminflfhjcjehjhmp",
"icolkoeolaodpjogekifcidcdbgbdobc",
"abjbfhcehjndcpbiiagdnlfolkbfblpb",
"bbjilncoookdcjjnkcdaofiollndepla",
"igpcgjcdhmdjhdlgoncfnpkdipanlida",
"nfhpojfdhcdmimokleagkdcbkmcgfjkh",
"jfnlkmaledafkdhdokgnhlcmeamakham",
"dibjpjiifnahccnokciamjlfgdlgimmn",
"fjclfmhapndgeabdcikbhemimpijpnah",
"jpnamljnefhpbpcofcbonjjjkmfjbhdp",
"iggmbfojpkfikoahlfghaalpbpkhfohc",
"fkllfgoempnigpogkgkgmghkchmjcjni",
"dealfjgnmkibkcldkcpbikenmajlglmc",
"abghmipjfclfpgmmelbgolfgmhnigbma",
"dcbfmglfdlgpnolgdjoioeocllioebpe",
"obmbmalbahpfbckpcfbipooimkldgphm",
"gbkmkgfjngebdcpklbkeccelcjaobblk",
"ehibgcefkpbfkklbpahilhicidnhiboc",
"gmljddfeipofcffbhhcpohkegndieeab",
"dajgdhiemoaecngkpliephmheifopmjb",
"fdbmoflclpmkmeobidcgmfamkicinnlg",
"obbfndpanmiplgfcbeonoocobbnjdmdc",
"lgljionbhcfbnpjgfnhhoadpdngkmfnh",
"ddenjpheppdmfimooolgihimdgpilhfo",
"bblkckhknhmalchbceidkmjalmcmnkfa",
"fhkmacopackahlbnpcfijgphgoimpggb",
"eohnfgagodblipmmalphhfepaonpnjgk",
"emkkigmmpfbjmikfadmfeebomholoikg",
"fekjbjbbdopogpamkmdjpjicapclgamj",
"afephhbbcdlgdehhddfnehfndnkfbgnm",
"agfjbfkpehcnceblmdahjaejpnnnkjdn",
"ahikdohkiedoomaklnohgdnmfcmbabcn",
"ahlfiinafajfmciaajgophipcfholmeh",
"akglkgdiggmkilkhejagginkngocbpbj",
"anihmmejabpaocacmeodiapbhpholaom",
"bhkcgfbaokmhglgipbppoobmoblcomhh",
"bkanfnnhokogflpnhnbfjdhbjdlgncdi",
"bpfdhglfmfepjhgnhnmclbfiknjnfblb",
"bpklfenmjhcjlocdicfadpfppcgojfjp",
"ckelhijilmmlmnaljmjpigfopkmfkoeh",
"dbcfhcelmjepboabieglhjejeolaopdl",
"dbcfokmgampdedgcefjahloodbgakkpl",
"ddohdfnenhipnhnbbfifknnhaomihcip",
"dehindejipifeaikcgbkdijgkbjliojc",
"dkhcmjfipgoapjamnngolidbcakpdhgf",
"effhjobodhmkbgfpgcdabfnjlnphakhb",
"egpnofbhgafhbkapdhedimohmainbiio",
"ehlgimmlmmcocemjadeafmohiplmgmei",
"epphnioigompfjaknnaokghgcncnjfbe",
"gbbpilgcdcmfppjkdociebhmcnbfbmod",
"glmbceclkhkaebcadgmbcjihllcnpmjh",
"gpffceikmehgifkjjginoibpceadefih",
"idnelecdpebmbpnmambnpcjogingdfco",
"ifceimlckdanenfkfoomccpcpemphlbg",
"ifmkfoeijeemajoodjfoagpbejmmnkhm",
"igkljanmhbnhedgkmgpkcgpjmociceim",
"ijhakgidfnlallpobldpbhandllbeobg",
"ijohicfhndicpnmkaldafhbecijhdikd",
"jbfponbaiamgjmfpfghcjjhddjdjdpna",
"jfamimfejiccpbnghhjfcibhkgblmiml",
"jlaaidmjgpgfkhehcljmeckhlaibgaol",
"kjnmimfgphmcppjhombdhhegpjphpiol",
"lfaahmcgahoalphllknbfcckggddoffj",
"mcbcknmlpfkbpogpnfcimfgdmchchmmg",
"mciddpldhpdpibckghnaoidpolnmighk",
"mjbimaghobnkobfefccnnnjedoefbafl",
"mnbhnjecaofgddbldmppbbdlokappkgk",
"nicmhgecboifljcnbbjlajbpagmhcclp",
"njhfmnfcoffkdjbgpannpgifnbgdihkl",
"noilkpnilphojpjaimfcnldblelgllaa",
"obcfoaeoidokjbaokikamaljjlpebofe",
"oejafikjmfmejaafjjkoeejjpdfkdkpc",
"ogaclpidpghafcnbchgpbigfegdbdikj",
"opmelhjohnmenjibglddlpmbpbocohck",
"pbilbjpkfbfbackdcejdmhdfgeldakkn",
"pcmdfnnipgpilomfclbnjpbdnmbcgjaf",
"pedokobimilhjemibclahcelgedmkgei",
"plnlhldekkpgnngfdbdhocnjfplgnekg",
"nonjdcjchghhkdoolnlbekcfllmednbl",
"pgeolalilifpodheeocdmbhehgnkkbak",
"gnamdgilanlgeeljfnckhboobddoahbl",
"alecjlhgldihcjjcffgjalappiifdhae",
"kelbkhobcfhdcfhohdkjnaimmicmhcbo",
"dpglnfbihebejclmfmdcbgjembbfjneo",
"lpjhpdcflkecpciaehfbpafflkeomcnb",
"ckkgmccefffnbbalkmbbgebbojjogffn",
"ppmibgfeefcglejjlpeihfdimbkfbbnm",
"ginfoagmgomhccdaclfbbbhfjgmphkph",
"mpneoicaochhlckfkackiigepakdgapj",
"djffibmpaakodnbmcdemmmjmeolcmbae",
"pejkmgfabkeddfcfldloonjbikjddapb",
"gmddfjhfjgbmabkihepijkanhmlooajl",
"kajjcgpohlkdcjfkcbkkbhapafcblaom",
"anbnajjakpmfdofijejenaclbceejlll",
"jkkmcoihchcflfjnigngdegbemipdlnl",
"ajmchakbijebimbgcohecngliijaddin",
"edpoobbacbcmfpnfpjoambjbihhobooi",
"opfogdennafhaoihhkocppaajlkpbfbn",
"ikojddbdekpboemgplhbloojlncbpmdd",
"chlpbdodahbpifpjbcoocpfadoffdbpb",
"flbcjbhgomclbhlchggbmnpekhfeacim",
"aadmpgppfacognoeobmheghfiibdplcf",
"abgfholnofpihncfdmombecmohpkojdb",
"aciloeifdphkogbpagikkpiecbjkmedn",
"acmgemnaochmalgkipbamjddcplkdmjm",
"addpbbembilhmnkjpenjgcgmihlcofja",
"adfjcmhegakkhojnallobfjbhenbkopj",
"aeklcpmgaadjpglhjmcidlekijpnmdhc",
"afifalglopajkmdkgnphpfkmgpgdngfj",
"agldjlpmeladgadoikdbndmeljpmnajl",
"ahmmgfhcokekfofjdndgmkffifklogbo",
"aippaajbmefpjeajhgaahmicdpgepnnm",
"akdpobnbjepjbnjklkkbdafemhnbfldj",
"akhiflcfcbnheaofcaflofbmnkmjlnno",
"aklklkifmplgnobmieahildcfbleamdb",
"alppaffmlaefpmopolgpkgmncopkbbep",
"amdnpfcpjglkdfcigaccfgmlmdepdpeo",
"aomepndmhbbklcjcknnhdabaaofahjcj",
"badbchbijjjadlpjkkhmefaghggjjeha",
"bbbdfjdplonnggfjjbjhggobffkggnkm",
"bbdldenhkjcoikalkfkgolomdpnncofc",
"bcdjcbgogdomoebdcbniaifnacjbglil",
"bcepmajicjlaoleoljbpaemkfghohmib",
"bdbablmeheiahecklheciomhmkplcoml",
"bfeecodfffgkdedfhmgbfindokikafid",
"bhifimmocncplbnikchffepggmofkake",
"blipiofdiknkllpajgepiiigfmfgnfep",
"bmagbmnmkaknlnoohbmobfmlgndijecb",
"bnecbeikepeloplclngelcgmgdnafhlp",
"bpnmalopmgpilaoikaeafokedkkonhea",
"cbncogjaakomibjcgdkpdjmlhfcjfojc",
"ccgmdfdcnpcfmpceggggmnhbolkhlffi",
"ccmnnlcciddhkdllgfmkojmmmpahdhlp",
"cdpmhflbdaoifgkmlhpfkbfgcifchgpn",
"cepgcjakdboolfkcbihdokfjjkeaddin",
"cfadfngejcdogjkkdohpkgeodjooogip",
"cgdmknakejoaompdmdeddpgmjffnniab",
"cgodgjmdljiecnbcgdampafcmlgmfmid",
"cibigjhoekijbagpgcgpgimebaiocdgm",
"cjbdbomgdbdgdlainhobpjnfkoidcond",
"clndgmolhlkchkbiinamamnbibkakiml",
"cmbfgkkjfkmmhalhebnhmanbenfghkcm",
"cncepimkmnhgbjmbcgoomegdkdhplihm",
"cnfbbaddndiehkmhdmmngecaofaojaeo",
"codilkcdacpeklilmgjknekfpminaieo",
"dakenmmdlklnjdpdfmdjccpeapmijaad",
"dapecdhpbakbfcoijjpdfoffnajhifej",
"dckadbanpeemhkphnnllamgolhbbbebi",
"ddodaoihhhohncjalnjgmgnlfhgckgdj",
"dhbhgfiodedkhgocailljbhcfjhplibb",
"dhcnonhheahlocjbbpkbammanpenpfop",
"dhgmdjkeagnhamkedcejighocjkkijli",
"dinlhhblgeikohhbfkcoeggglbjlanhg",
"djjdjlbigcdjlghdioabbkjhdelmdhai",
"dkcppkdodfegjkeefohjancleioblabi",
"dkfbfgncahnfghoemhmmlfefhpolihom",
"dmklpmfpkokephcjdmocddkhilglgajl",
"dnimnhhaiphlclcocakkfgnnekoggjpl",
"doecpeonnonddhfpabfgblijljennlcj",
"dofbgmolpdoknlknfjddecnahgjpinpb",
"dppogkehbpnikehcmadgkbimjnmhdnlo",
"eapceolnilleaiiaapgionibccekkeom",
"ecaejcfpngljeinjmahknbemhnddiioe",
"ecgafllkghmmbnhacnpcobibalonhkkj",
"edfmeionipdoohiagoaefljjhififgnl",
"edgbooeklapanaclbchdiaekalebmfgb",
"edohegfjelahakooigmnmkmjofcjgofe",
"eeeiekjkpbneogggaajnjldadjmclhlo",
"eejkpejdfojkbklnlnpgpojoidojbhnh",
"efckalhlcogbdbfopffmbacghfoelaia",
"efnaoofiidefjeefpnheopknaciohldg",
"egdpmjnldpefdaiekiapjkanabfiaodp",
"egicjjdcjhfdnejimnhngogjmoajffpm",
"ejcefeinlmdmpnohebfckmodhdkhlgmk",
"ejighbgeedkpcambhfkohdalcgckdein",
"empoeejllbcgpkmghimibnapemegnihf",
"enlaekiichndcbohopenblignipkjaoa",
"enmomapaolnpbaenhilkjhmobpggjcpm",
"eohabjkmhajbeaejogdikpgapkeigdki",
"eoijplcnfnjgofchhdkkhpfcjkcefgkb",
"facihnceaoboeoembnbmdlecmkpioacc",
"fagaafjhdmoagacggplmbpganjfjjpcf",
"fanonokndfeibplocpeipgfbopkigcce",
"faokbgedcfhnfecloigcihpplicdnann",
"fcdopghpidfdeglcheccmehiaedgpmkm",
"fdacngbbemokpkmdkdefkoodndakgejc",
"fdfffeipjpofnkmdkadjcjohdfoeblhk",
"ffhamkjhfajcjlnobkogimnhiagohgfg",
"fjnbjacfigdidgeeommhbdhnojamhpfg",
"fjohhelccbogecmolmjemopgackpnmpg",
"flagaiaajbikpfnnkodcphdcmgefmbcl",
"flgfngbiaanimkhjkojnmilfalidpign",
"fmngfipkcebejdconcibohjjgfmokhpa",
"fnblapfcdifokdbkpcbhpkajlkgmcjii",
"fpdjcfokkeooncckcolkmmppebjnfhgh",
"fphafkamioonlcelldogidajbcmmicco",
"fpjbgjpkfcanmdgjpmnnmoekkaahmafg",
"fplmpcijomgjmfbjcidbgpjdmhmamlkf",
"gdacidkmmbdpkedejaljplnfhjidomio",
"gdoomgeeelkgcmmoibloelbodkpggdle",
"geoolholooeeblajdjffdmknpecbkmah",
"ghfgeefhkkoajgmnopaldgcagohakhmg",
"ghhanhhegklhcoffmgkdbiekfhmbfbnc",
"gjkigcdoljdojaaomnadffdhggoobdpc",
"gkjkhpbembbjogoiejpkehohclfoljbp",
"glibnbcgclecomknccifdaglefljfoej",
"gllogphgdmclhfledlcgmdolngohamcl",
"haagbldencigkgikfekmoaaofambnafp",
"haglbigaalkckkedjamjibfnklbbodck",
"hcgepcgbgnleafnfcepjbekchbdmekfa",
"hdbchphkjjidcfidaelcpmonodhhaahp",
"hdljgflalglmllbagpacjmkdiggliidk",
"hdpnlijiblkmokbjljbahhgkpokgpkli",
"heaphjoejcpdagahbnkkloiaicpadomp",
"hjfmdhbmpagpfheceengkakdmpncmlif",
"hjkjkmkoklbhjhlddialffkchddlncjb",
"hjoihkjijjbkiglgeghbokincmidfped",
"hncokbmdmbmmlkjhoagcpokehopdikhc",
"hnhpnbajfmmopedidmiablkcdnlegkmd",
"homdfmaeflodjknffbnhagmlhmgmbjac",
"iccagibmclklcmiejfddepgffgkhnnib",
"idkllmolbaiailjfidkjcidapkddidbg",
"ifbffcgakkboaffkidggpcjolehhhbfd",
"ifdebecchhapkfdbcbhpmjonmbpfpnck",
"igbcfkjflkgamnoikcpiljglnmjnkjac",
"iiblgogamkmdfojoclpdhainbndfpcci",
"inkankpmoblmficechfgfinajifbfkdn",
"ioejcipbmdjinhfciojiacdjolkabkmn",
"iojhbljpppeociniiemjfelmdcgikmep",
"ipgnnndhgeaclopjgiihppbbfnmkmjcm",
"jckaglinbbflgcklfgacjdmgpnccmdng",
"jfocahgaekfaemhfcfefcodphgpinnch",
"jgbkgjepkeklblmlhnpjmnbinmifjenc",
"jlbebokeclkofhchdepbojfhmocdlhfl",
"jlbhkoohfmnikpalgglhpadlbeiobkaa",
"jmlbnlcodmikhdpbjjdemgaebjgmpooa",
"jnmckphflgdpioinbjaeckdajkbgcfgg",
"kcjahchbheejjpdpohgfkaoknhcdjjnh",
"kdihodbgfndblemlklkllhfjhiidbgih",
"kefmhdhaebhmdeaabcgoaegmgodncebc",
"kicmnilchjfefpceoaiopdpbpkicgjjm",
"kigiheamdfmilbhkfdploghfnndcgkko",
"kjgceeikbnmddoaggelkkpljdabhghkc",
"kkeojhapoadcdlmkjlakdbhfkldbbmgi",
"klblfmpeelmpnadjahhdakiomhaepogb",
"kmfiklhdkhidbmofjbgmpeaogglkndpe",
"knacgnmpceaffedmgegknkfcnejjhdpp",
"kppjffaccdlhfeleafnohmfkgimdjmgg",
"lbbegfjhlhpikmhbdcfcoadegdldmaen",
"lbjgbekokephmmfllmpglefmoaihklpn",
"lblnngjkgcpplmddebmefokmccpflhip",
"lcdabcbanafchdlcbdjgngcplnkijala",
"lcgjhoonomcmjpbnijfohbdhhjmhjlal",
"ldkienofjncecbbnmhpngiiidekfcdoe",
"lemhpidjofhodofghkakoglahdafpcbe",
"lgekbdjboenacbkiabfkkcpjgacmjcdg",
"lggmpibegkcnfogpophgnchognofcdgo",
"ljppknljdefmnkckkdjaokhlncbiehgo",
"lkdahidfbdadmblpkopllegopldfbhge",
"llngndcpphncgeledehpklbeheadnoan",
"lmmdoemglmnjenhfcjkhgpkgiedcejmn",
"lniooknjghghdjoehegcoinmbhdbhcck",
"makliapgjjpdkkaikobcmdhkfbfcoafk",
"maohnjppabopdhfkholcdkpehdojnpoc",
"mcadalidfbmnponoamfdjlahdeheommb",
"mcafdholbcjhepgnpfdogaiagjmlfcon",
"meioomnaphfjchjidcfnbadkbaaoanok",
"mjbmelinkhpkmbjnocdklkjpiilpikba",
"mkghdamdheccacmkmnchkaoljoflpoek",
"mkjcnnfcmmniieaidfadidepdgfppfdj",
"mmhaojkmpbmgbkojlagnhmjlfmnaglla",
"mmlhchoolkdnmnddgmoohigffekjnofo",
"mmmapklofkmbcahafjmiogdbmpagimlp",
"mngcfgonjbdbdbifcbhmdiddloganbcc",
"mnnpffgmgkbdllleeihdgfgleomdhacm",
"moalaminambcgbljenplldelnhnaikke",
"moljhdcbomchgdffhddpicbokacnbjoj",
"mpdpjfobafahmgicjmpnfklbphhlacel",
"mpfleoaldoclbjhfkgbmnelkkbolbegl",
"nafbodmhgaabbfchodpkmpnibgjmeeei",
"naofchadlleomaipaienfedidkiodamo",
"nbbeiofjfjmnicfhkfbjdggbclmbaioc",
"nbblafbmmogmlhejjondcclcgbkdmjln",
"nbekcbebginchflfegofcjjmojpppnad",
"nbhjdcacphemibgeamjkmeknfeffgngk",
"nchffcpkbehklpbdodlakgdbnkdcnpbi",
"nckldhnoondmiheikhblobkgcfchcbld",
"ncnonnloajjbpdpgnelmlbflmbhlilid",
"ncpjlhellnlcjnjmablbaingipdemidh",
"ndchgkeilnpiefnoagcbnlellpcfmjic",
"ndeejbgcbhehjpjmngniokeleedmjmap",
"ndihciopmidkbamcfgpdmojcpalolfgo",
"neafafemicnbclhpojeoiemihogeejhl",
"nekimocmhfdimckbgchifahcgafhnagb",
"nenaiblmmandfgaiifppcegejpinkebl",
"neplbnhjlkmpekfcjibdidioejnhejfl",
"nepnhilmahdmejhghfbjhhabaioioeel",
"nfanjklinojeimbhmfliomdihldjhfpm",
"nfebelgoldoapjgfkekcmbddpljakakp",
"nfhbpopnbgigkljgmelpfncnghjpdopf",
"nfpnclghflfcgkgdjcbpoljlafndbomk",
"ngaccohdjpkgnghichikgcpfagnoeeim",
"ngajighkghnbfnleddljedblnjaggebo",
"ngchnhjdpgpkapghgpncmommhelegfbh",
"ngeofnobniohmdmdkliflkeppfgbjpgn",
"nglggaejaflihehbajhppedepephbfae",
"nhnemamgicdjigoedllaicngcfihkmhf",
"nhneoegahiihkkgdindfdnobhhhlpfnm",
"njablodeioakdgahodegclphmnbaphin",
"njdegihoinoiplfpbcckmjahlnpeipii",
"njliieipbkencklladfemkkipmfcjiom",
"nklckhbegicdajpehmmpbnpelkdjmdoc",
"nkopnpaipcceikcmfcjlacgkjoglodag",
"nldffbaphciaaophmdnikgkengbmigli",
"nmkfcjaghjoedelgkomoifnpdejjpcbj",
"nmlmdkblidkckbhidgfgghajlkgjijkp",
"nnceiipjfkdobpenbmnajbkdfiklajgl",
"noiinnecebffnjggilfhailhhgdilbld",
"nojmjafalbmmoohpmjphalepmfnmhfao",
"npcndkopgafkjggoledlgfblodppnckj",
"nphiadicgehlpbniemnkhinphngoeaeg",
"oaihijkoodmmaibfhojdinffpinmhdji",
"oanlnaeipdakcmafockfiekhdklfidjb",
"oanplobhgngkpkpeihcdojkongpiheci",
"obahibdkmhmnenkcdpakilchcppihopl",
"obgdpcjbebcaphmigjhogcikejnlbjgl",
"ocfpmgbbkjeblbhdehminjdjffhcidbi",
"ocgfhclcahimdhfjgmakmfdnhomofljo",
"ocponkhpfikgnggeflddgkfcmhjejedo",
"odoenahafpbigcelejhbkkhnjfleanok",
"oehamnhnpejphgpkgnenefolepinadjj",
"oejbnchocabaoicconfnbjghebmbfemc",
"oejmcobpfiiladgbfpknibppfnekbolo",
"oemkcngaaomgokaclafmkcgcpbfelmnb",
"ofbfieekadnmifbaoigkcffobkkjblep",
"ofgihclaiecmjbfjnajjimdbjnbiimkk",
"ofkjndegefemablfmefngnpchlhapdmi",
"ofockibbbgfclddbpbhhohdldgkomhgm",
"ogegpnamjdpcadpldhijjlhkicgbnkjj",
"ogiaghccmoklogdlbchapejmjnnlichn",
"ohjoklkmollkbcibgddolpmpgaoophfl",
"ohobkendnpiijpeiaimjbannfcmhaogi",
"ohoingjkmkkoffkdmbpipdncbkhaaefd",
"oihecidjnjpjfeefkambkjgebbmpahgn",
"oilikkahlcnchaipbojfgejapechblbl",
"ojfjgkolegfhneacbgcjaoajfgcfoapf",
"ojhlagjgjbjfgllocdhlpnkbdlcipnmo",
"ojmpgbcmiimbkmjfgmcneplkneleehcc",
"ojnlggfhmoioajgmnelfdpjojaeknjog",
"okgnpdnekilbcgcfeheanbpbhnhmopfc",
"okjdiicjoeloipmgdopdmhpebnnfadih",
"okphhehkikoonipdjmhglcmlgccjcblp",
"olochidfgadpdbdmdfbhgimiffnllaij",
"ombenndgcnmcnfohnbbjcmbmfmpefojc",
"omclahaofiigfggelbcleagcphjhabmp",
"onjjlcdmafgcjdbhmlnpmheobbfeilah",
"onnmfhejbikffoenamcfglpjnmmbkdeg",
"oonheecobachpkogdjjnemiipogpgnmg",
"opbobdfddmiemhekjiglckcenhpfdbjm",
"opjpfngjbdmgkilopbnapbkbngedcpmj",
"oplhjpchbbngmpgcpjcbijhfehbhodgi",
"oppbpkjmehgijcpeddkpbadoidfpcblg",
"paddichbcfehpelokpidnagccddbpkin",
"pajbempmgmalnfpbnpclkelnhfccikal",
"pboddlnfegdnifbhepjegnokocjpadpd",
"pcbpmbmpjjibcmodpaomahiokikjomgc",
"pcembleiffdccjkcebaodmhgkopipdan",
"pcgcmplcfdfkkkmaggghdghnlddkpbbo",
"pdhibfagbndnidgfjkhdhlfibdoofbji",
"pdloaiifhmlbhhppajjmfpijopfeenoo",
"pehnljkefahmlhifockljagcfcpljclc",
"pelnnoacfeaanpmnmacjjnnpgfggekig",
"pfekelemlpmelhipncgddloaflehglmb",
"pfepcffcdodcancalckiencamnonoebl",
"pfpgpbfndacjjjdlgefggndhionakfmb",
"pghkmhmjldklacabcgkaaboikfaaogmi",
"pgilbgknfcnjjblfnjojmcpkggipblci",
"pgleokbigapafgjodffamlhdkhiagdgb",
"phkafpikdokjpogdhjpkcgfjpfgnlgeo",
"phmogllmicehmpglfobbihoelfidjnpd",
"pihogmfmhefemijkgmbimkngninbkkce",
"pilmbpeapchjcnldfomimmcfoigoenoc",
"pinfndnjmdocmimbeonilpahdaldopjc",
"pinkcaefpkjpljfflabpkcgbkpbomdfk",
"pjabdohmcokffcednbgpeoifpdbfgfbj",
"pjjmcpmjocebmjmhdclbiheoideefiad",
"plcdglhlbmlnfoghfhmbhehapfadedod",
"pmdakkjbaeioodmomlmnklahihodjcjk",
"pmnpldnflfopbhndkjndecojdpgecckf",
"pnamonkagicmlnalnlcdaoeenhlgdklf",
"poeokidblnamjkagggonidcigafaobki",
"pofffhlknjbjolmfoeagdmbbdbjjmeki",
"polgnkadhhhmlahkhhbicledbpklnake",
"ppicajcmopaimnnikbafgknffbdmomfk",
"ppmbiomgjfenipmnjiiaemcaboaeljil",
"bmngkajcejghcgafbobemkpjboikmgfi",
"deciloopcooglpjhomblbbjeeenohbpg",
"gabbbocakeomblphkmmnoamkioajlkfo",
"ggolfgbegefeeoocgjbmkembbncoadlb",
"mdpgppkombninhkfhaggckdmencplhmg",
"fgaapohcdolaiaijobecfleiohcfhdfb",
"iibnodnghffmdcebaglfgnfkgemcbchf",
"olkpikmlhoaojbbmmpejnimiglejmboe",
"bhfoemlllidnfefgkeaeocnageepbael",
"nilbfjdbacfdodpbdondbbkmoigehodg",
"eikbfklcjampfnmclhjeifbmfkpkfpbn",
"pfnmibjifkhhblmdmaocfohebdpfppkf",
"cgpbghdbejagejmciefmekcklikpoeel",
"klejifgmmnkgejbhgmpgajemhlnijlib",
"ceoldlgkhdbnnmojajjgfapagjccblib",
"mnafnfdagggclnaggnjajohakfbppaih",
"oknpgmaeedlbdichgaghebhiknmghffa",
"pcaaejaejpolbbchlmbdjfiggojefllp",
"lmcajpniijhhhpcnhleibgiehhicjlnk",
"lnocaphbapmclliacmbbggnfnjojbjgf",
"bhcpgfhiobcpokfpdahijhnipenkplji",
"dambkkeeabmnhelekdekfmabnckghdih",
"dgjmdlifhbljhmgkjbojeejmeeplapej",
"emechknidkghbpiodihlodkhnljplpjm",
"hajlccgbgjdcjaommiffaphjdndpjcio",
"dljdbmkffjijepjnkonndbdiakjfdcic",
"cjmpdadldchjmljhkigoeejegmghaabp",
"jlkfgpiicpnlbmmmpkpdjkkdolgomhmb",
"njdkgjbjmdceaibhngelkkloceihelle",
"phoehhafolaebdpimmbmlofmeibdkckp",
"pccfaccnfkjmdlkollpiaialndbieibj",
"fbhbpnjkpcdmcgcpfilooccjgemlkinn",
"dppilebghcniomddkpphiminideiajff",
"ojmbbkdflpfjdceflikpkbbmmbfagglg",
"chmaijbnjdnkjknoigffoohjhpejjppd",
"jhcfnojahmdghhebdaoijngclknfkbjn",
"akdbogfpgohikflhccclloneidjkogog",
"lgjogljbnbfjcaigalbhiagkboajmkkj",
"aemaecahdckfllfldhgimjhdgiaahean",
"klbibkeccnjlkjkiokjodocebajanakg",
"fmfjhicbjecfchfmpelfnifijeigelme",
"acdfdofofabmipgcolilkfhnpoclgpdd",
"oobppndjaabcidladjeehddkgkccfcpn",
"aonedlchkbicmhepimiahfalheedjgbh",
"aoeacblfmdamdejeiaepojbhohhkmkjh",
"eoeoincjhpflnpdaiemgbboknhkblome",
"onbkopaoemachfglhlpomhbpofepfpom",
"inlgdellfblpplcogjfedlhjnpgafnia",
"ejfajpmpabphhkcacijnhggimhelopfg",
"pgjndpcilbcanlnhhjmhjalilcmoicjc",
"napifgkjbjeodgmfjmgncljmnmdefpbf",
"glgemekgfjppocilabhlcbngobillcgf",
"klmjcelobglnhnbfpmlbgnoeippfhhil",
"ldbfffpdfgghehkkckifnjhoncdgjkib",
"mbacbcfdfaapbcnlnbmciiaakomhkbkb",
"mdnmhbnbebabimcjggckeoibchhckemm",
"lfedlgnabjompjngkpddclhgcmeklana",
"mdpljndcmbeikfnlflcggaipgnhiedbl",
"npdpplbicnmpoigidfdjadamgfkilaak",
"ibehiiilehaakkhkigckfjfknboalpbe",
"lalpacfpfnobgdkbbpggecolckiffhoi",
"hdbipekpdpggjaipompnomhccfemaljm",
"gfjocjagfinihkkaahliainflifnlnfc",
"ickfamnaffmfjgecbbnhecdnmjknblic",
"bmcnncbmipphlkdmgfbipbanmmfdamkd",
"miejmllodobdobgjbeonandkjhnhpjbn",
"mabdjppmcjpjploliggpbonahnjjlgkf"

];
def rme = 0;
if (doc.containsKey('msg_json.MalExt') && !doc['msg_json.MalExt'].empty) {
    def userExtensionsArray = doc['msg_json.MalExt'];
    int rmeMatchCount = 0;
    for (String extension : userExtensionsArray) {
        if (maliciousExtensions.contains(extension)) {
            rmeMatchCount++;
        }
    }
    int totalExtensions = userExtensionsArray.size();
    if (totalExtensions > 0) {
        rme = (rmeMatchCount / (double) totalExtensions) * 100;
    }
}
overallRisk += w2 * rme;

// RMF calculation
def rmf = 0;
if (doc.containsKey('msg_json.MalDownload') && doc['msg_json.MalDownload'].size() > 0) {
    def malDownloads = doc['msg_json.MalDownload'];
    if (malDownloads != null) {
        def malDownloadCount = malDownloads.length;
        if (malDownloadCount > 0) {
            rmf = Math.min(malDownloadCount * 20, 100);
        }
    }
}
overallRisk += w4 * rmf;

// RPA calculation
def rpa = 50;
if (doc.containsKey('msg_json.BlockedPopUps') && doc['msg_json.BlockedPopUps'].size() > 0) {
    def blockedPopUps = doc['msg_json.BlockedPopUps'].value;
    if (blockedPopUps != null) {
        blockedPopUps = blockedPopUps.toLowerCase();
        if (blockedPopUps == 'true') {
            rpa = 0;
        } else if (blockedPopUps == 'false') {
            rpa = 100;
        }
    }
}
overallRisk += w8 * rpa;

// RPM calculation
def rpm = 0;
if (doc.containsKey('msg_json.WeakPassMgmt') && doc['msg_json.WeakPassMgmt'].size() > 0) {
    def weakPassCount = doc['msg_json.WeakPassMgmt'].value;
    if (weakPassCount != null) {
        def count = (weakPassCount instanceof Number) ? 
                    weakPassCount : Double.parseDouble(weakPassCount.toString());
        def maxWeakPasswords = 1024;
        rpm = Math.min((Math.log(count + 1) / Math.log(2)) / (Math.log(maxWeakPasswords) / Math.log(2)) * 100, 100);
    }
}
overallRisk += w5 * rpm;

// RSB calculation
def rsb = 50;
if (doc.containsKey('msg_json.DisabledSafeBrowsing') && doc['msg_json.DisabledSafeBrowsing'].size() > 0) {
    def safeBrowsingStatus = doc['msg_json.DisabledSafeBrowsing'].value;
    if (safeBrowsingStatus != null) {
        safeBrowsingStatus = safeBrowsingStatus.toLowerCase();
        if (safeBrowsingStatus == 'true' || safeBrowsingStatus == 'yes' || safeBrowsingStatus == 'disabled') {
            rsb = 100;
        } else if (safeBrowsingStatus == 'false' || safeBrowsingStatus == 'no' || safeBrowsingStatus == 'enabled') {
            rsb = 0;
        }
    }
}
overallRisk += w9 * rsb;

// RTC calculation
def rtc = 0;
if (doc.containsKey('msg_json.ThrirdPartyCookies') && doc['msg_json.ThrirdPartyCookies'].size() > 0) {
    def cookieValue = doc['msg_json.ThrirdPartyCookies'].value;
    if (cookieValue != null) {
        def cookieCount = (cookieValue instanceof Number) ? 
                          cookieValue : Double.parseDouble(cookieValue.toString());
        def maxCookies = 2000;
        rtc = Math.min((Math.log(cookieCount + 1) / Math.log(2)) / (Math.log(maxCookies) / Math.log(2)) * 100, 100);
    }
}
overallRisk += w6 * rtc;

// RUP calculation
def rup = 0;
if (doc.containsKey('msg_json.UnsecureProtocol') && doc['msg_json.UnsecureProtocol'].size() > 0) {
    def unsecureProtocolCount = doc['msg_json.UnsecureProtocol'].value;
    if (unsecureProtocolCount != null) {
        def count = (unsecureProtocolCount instanceof Number) ? 
                    unsecureProtocolCount : Double.parseDouble(unsecureProtocolCount.toString());
        def maxUnsecureProtocols = 10000;
        rup = Math.min((Math.log(count + 1) / Math.log(2)) / (Math.log(maxUnsecureProtocols) / Math.log(2)) * 100, 100);
    }
}
overallRisk += w3 * rup;

// Ensure the overall risk is between 0 and 100
overallRisk = Math.min(Math.max(overallRisk, 0), 100);

emit(overallRisk/100);